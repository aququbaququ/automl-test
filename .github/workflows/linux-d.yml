name: CI-d

on: [ push ]

jobs:
  build-image:
    name: Build image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Container
        uses: docker/build-push-action@v5
        with:
          tags: project-image
          context: .
          push: false
          outputs: type=docker,dest=/tmp/project.tar
          build-args: |
            KEY=value

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: project
          path: /tmp/project.tar

  phpunit:
    name: PHPUnit
    runs-on: ubuntu-latest
    needs: [ build-image ]
    services:
      database:
        image: mariadb:10.6
        env:
          MYSQL_DATABASE: web
          MYSQL_USER: web
          MYSQL_PASSWORD: web
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: project
          path: /tmp

      - name: Load image
        run: docker load --input /tmp/project.tar

      - name: Run Tests
        uses: addnab/docker-run-action@v3
        with:
          image: project-image
          options: |
            --add-host=host.docker.internal:host-gateway
            -e APP_KEY=base64:abcdefghijklmnopqrstuvwxyz1234567890
            -e DB_PORT=${{ job.services.database.ports[3306] }}
            -e DB_HOST=host.docker.internal
            -e DB_USERNAME=web
            -e DB_PASSWORD=web
            -e DB_DATABASE=web
          run: |
            php artisan passport:keys
            vendor/bin/phpunit --testdox

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    needs: [ build-image ]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: project
          path: /tmp

      - name: Load image
        run: docker load --input /tmp/project.tar

      - name: Run PHPStan
        uses: addnab/docker-run-action@v3
        with:
          image: project-image
          run: vendor/bin/phpstan analyse

  php-cs-fixer:
    name: PHP-CS-Fixer
    runs-on: ubuntu-latest
    needs: [ build-image ]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: project
          path: /tmp

      - name: Load image
        run: docker load --input /tmp/project.tar

      - name: Run PHP-CS-Fixer
        uses: addnab/docker-run-action@v3
        with:
          image: project-image
          run: vendor/bin/php-cs-fixer fix --stop-on-violation --dry-run

  remove-image:
    name: Remove image
    if: always()
    runs-on: ubuntu-latest
    needs: [ build-image, phpunit, phpstan, php-cs-fixer ]
    steps:
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: project