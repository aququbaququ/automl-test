name: CI

on:
  #push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]

  workflow_dispatch:
  repository_dispatch:
  
  #schedule:
    #- cron: "0 */5 * * *"
  
env:
  SGHREPO: ${{ secrets.SGHREPO }}
  SGHDIR: ${{ secrets.SGHDIR }}
  GH_TOKEN: ${{ secrets.SGHTOKEN }}
  SNUSER: ${{ secrets.SNUSER }}
  SNUSERTOKEN: ${{ secrets.SNUSERTOKEN }}
  SNSKEY: ${{ secrets.SNSKEY }}
  HSUSER: ${{ secrets.HSUSER }}
  HSPASS: ${{ secrets.HSPASS }}
  HSPORT: ${{ secrets.HSPORT }}
  NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
  SSH_PASSWORD: ${{ secrets.HSPASS }}
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          
jobs:
  build:
    runs-on: ubuntu-latest
    #if: ${{ github.event_name == 'schedule' }}
    permissions:
      actions: write

    steps:
      - uses: actions/checkout@v4
        
      - uses: ConorMacBride/install-package@v1
        with:
          apt: fish jq
        
      #- name: NGROK and handy-sshd
      #  run: |
      #     wget https://github.com/nwtgck/handy-sshd/releases/download/v0.4.3/handy-sshd-0.4.3-linux-amd64.deb && sudo apt install ./handy-sshd-0.4.3-linux-amd64.deb && rm ./handy-sshd-0.4.3-linux-amd64.deb
      #     sudo handy-sshd -p "$HSPORT" -u "$HSUSER":"$HSPASS" &

      #     curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null && echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list && sudo apt update && sudo apt install ngrok
      #     ngrok config add-authtoken $NGROK_TOKEN
      #     echo -e "${HSUSER}\n${HSPASS}" | sudo passwd "${USER}"
           #ngrok tcp $HSPORT &
      #     ngrok tcp 22 &
      #     curl -s -X POST https://api.telegram.org/bot"$TELEGRAM_BOT_TOKEN"/sendMessage -d chat_id="$TELEGRAM_CHAT_ID" -d text="$USER:$HSPASS"
      #     MESSAGE=$(curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
      #     curl -s -X POST https://api.telegram.org/bot"$TELEGRAM_BOT_TOKEN"/sendMessage -d chat_id="$TELEGRAM_CHAT_ID" -d text="$MESSAGE"
        
      - name: Run a multi-line script
        run: |
          #sudo apt-get update
          #sudo apt install fish jq
          
          sudo tee -a ~/.bash_profile <<EOF
            if [ -f ~/.bashrc ]; then
              . ~/.bashrc
            di
          EOF
          sudo chsh -s /usr/bin/fish runner
          sudo chsh -s /usr/bin/fish root
          
          wget https://github.com/cli/cli/releases/download/v2.52.0/gh_2.52.0_linux_amd64.deb && sudo apt install ./gh_2.52.0_linux_amd64.deb && rm ./gh_2.52.0_linux_amd64.deb
          gh auth status
          gh repo clone $SGHREPO && cd "$SGHDIR"
          git submodule update --init --recursive && git config submodule.recurse true && git pull
          sudo apt-get install ca-certificates fonts-liberation libappindicator3-1 libasound2 libatk-bridge2.0-0 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgbm1 libgcc1 libglib2.0-0 libgtk-3-0 libnspr4 libnss3 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 lsb-release wget xdg-utils chromium-browser
          #chromium
          #sudo apt-get install -y gconf-service libasound2 libatk1.0-0 libcairo2 libcups2 libfontconfig1 libgdk-pixbuf2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libxss1 fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils
          #wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          #dpkg -i google-chrome-stable_current_amd64.deb; apt-get -fy install
          
          curl https://mise.run | sh
          mise use --global node@14.15.4
          mkdir -p ~/.config/fish && echo '~/.local/bin/mise activate fish | source' >> ~/.config/fish/config.fish
          echo 'eval "$(~/.local/bin/mise activate bash)"' >> ~/.bashrc && source ~/.bashrc
          
          npm i -g yarn && npm i -g pm2 && npm i -g nodemon && yarn config set network-timeout 600000 -g
          yarn --ignore-optional --ignore-scripts

          #wget https://github.com/owenthereal/upterm/releases/download/v0.14.3/upterm_linux_amd64.deb && sudo apt install ./upterm_linux_amd64.deb && rm ./upterm_linux_amd64.deb
          #upterm host -- bash &
          #upterm session current | grep ssh | awk '{print $4}'
          touch /tmp/continue

      # - name: Netbird Connect
      #   run: |
      #     sudo echo "127.0.0.1   ghserver.netbird.cloud" | sudo tee -a /etc/hosts
      #     sudo echo "localhost   ghserver.netbird.cloud" | sudo tee -a /etc/hosts
      #     sudo echo "127.0.0.1   ghserver-1.netbird.cloud" | sudo tee -a /etc/hosts
      #     sudo echo "localhost   ghserver-1.netbird.cloud" | sudo tee -a /etc/hosts
      #     curl -fsSL https://pkgs.netbird.io/install.sh | sh
      #     netbird login --setup-key $SNSKEY --allow-server-ssh --hostname ghserver
      #     netbird up --setup-key $SNSKEY --allow-server-ssh --hostname ghserver
      #     netbird status
  
      # - name: Netbird Connect
      #   id: netbird
      #   uses: Alemiz112/netbird-connect@v1
      #   with:
      #     setup-key: ${{ secrets.SNSKEY }}
      #     hostname: 'ghserver'
      #     args: '--allow-server-ssh'

      - uses: ahmadnassri/action-workflow-queue@v1
    
      - name: Sleep for 5 hours
        uses: jakejarvis/wait-action@master
        with:
          time: '5h'

      - name: Sleep for 5 mins for new Workflow to init
        uses: jakejarvis/wait-action@master
        with:
          time: '5m'

      - name: Cancel workflow
        uses: action-pack/cancel@v1

  workflow-keepalive:
    runs-on: ubuntu-latest
    #if: ${{ github.event_name == 'schedule' }}
    permissions:
      actions: write
    env:
      GH_TOKEN: ${{ secrets.SGHTOKENLOCAL }}
      WORKFLOWID: ${{ github.run_id }}
    steps:
      - uses: ahmadnassri/action-workflow-queue@v1
      
      - name: Sleep for 5 hours
        uses: jakejarvis/wait-action@master
        with:
          time: '5h'
          
      - name: Invoke workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: linux.yml
          repo: ${{ github.repository }}
          token: "${{ secrets.SGHTOKENLOCAL }}"
    
      # - name: Redispatch workflow
      #   run: |
      #      curl -L \
      #       -X POST \
      #       -H "Accept: application/vnd.github.v3+json" \
      #       -H "Authorization: Bearer $GH_TOKEN" \
      #       https://api.github.com/repos/$GITHUB_REPOSITORY/actions/workflows/$WORKFLOWID/dispatches \
      #       -d '{"ref":"main"}'

      #      curl -L \
      #       -X POST \
      #       -H "Accept: application/vnd.github+json" \
      #       -H "Authorization: Bearer $GH_TOKEN" \
      #       -H "X-GitHub-Api-Version: 2022-11-28" \
      #       https://api.github.com/repos/$GITHUB_REPOSITORY/dispatches \
      #       -d '{"event_type":"repository_dispatch"'

      #      curl -L \
      #      -X POST \
      #      -H "Accept: application/vnd.github+json" \
      #      -H "Authorization: Bearer $GH_TOKEN" \
      #      -H "X-GitHub-Api-Version: 2022-11-28" \
      #      https://api.github.com/repos/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID/rerun


  tmate-session:
      runs-on: ubuntu-latest
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      steps:
        - uses: ahmadnassri/action-workflow-queue@v1
        
        - name: Start SSH via tmate
          uses: rdp-studio/ssh2actions@main
          env:
            TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
            TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

        - uses: Wandalen/wretry.action@v3.5.0
          with:
            attempt_limit: 0
            action: rdp-studio/ssh2actions@main
            with: |
              env: |
                TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
                TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
